# Generated by Django 5.0.3 on 2024-06-15 17:37

import app.models
import ckeditor.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_Number', models.CharField(blank=True, max_length=10, null=True, validators=[app.models.validate_phone_number])),
                ('avatar', models.ImageField(blank=True, default=None, null=True, upload_to='uploads/%Y/%m')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('vehicle_Condition', ckeditor.fields.RichTextField()),
            ],
            options={
                'db_table': 'Buses',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('point', models.FloatField(default=0, max_length=10)),
            ],
            options={
                'ordering': ['id'],
            },
            bases=('app.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('totalDrivingTime', models.FloatField(default=0, max_length=10)),
                ('totalSalary', models.FloatField(default=0, max_length=10)),
            ],
            options={
                'ordering': ['id'],
            },
            bases=('app.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('startPoint', models.CharField(choices=[('Hà Nội', 'Hà Nội'), ('Hà Giang', 'Hà Giang'), ('Cao Bằng', 'Cao Bằng'), ('Bắc Kạn', 'Bắc Kạn'), ('Tuyên Quang', 'Tuyên Quang'), ('Lào Cai', 'Lào Cai'), ('Điện Biên', 'Điện Biên'), ('Lai Châu', 'Lai Châu'), ('Sơn La', 'Sơn La'), ('Yên Bái', 'Yên Bái'), ('Hoà Bình', 'Hoà Bình'), ('Thái Nguyên', 'Thái Nguyên'), ('Lạng Sơn', 'Lạng Sơn'), ('Quảng Ninh', 'Quảng Ninh'), ('Bắc Giang', 'Bắc Giang'), ('Phú Thọ', 'Phú Thọ'), ('Vĩnh Phúc', 'Vĩnh Phúc'), ('Bắc Ninh', 'Bắc Ninh'), ('Hải Dương', 'Hải Dương'), ('Hải Phòng', 'Hải Phòng'), ('Hưng Yên', 'Hưng Yên'), ('Thái Bình', 'Thái Bình'), ('Hà Nam', 'Hà Nam'), ('Nam Định', 'Nam Định'), ('Ninh Bình', 'Ninh Bình'), ('Thanh Hóa', 'Thanh Hóa'), ('Nghệ An', 'Nghệ An'), ('Hà Tĩnh', 'Hà Tĩnh'), ('Quảng Bình', 'Quảng Bình'), ('Quảng Trị', 'Quảng Trị'), ('Thừa Thiên Huế', 'Thừa Thiên Huế'), ('Đà Nẵng', 'Đà Nẵng'), ('Quảng Nam', 'Quảng Nam'), ('Quảng Ngãi', 'Quảng Ngãi'), ('Bình Định', 'Bình Định'), ('Phú Yên', 'Phú Yên'), ('Khánh Hòa', 'Khánh Hòa'), ('Ninh Thuận', 'Ninh Thuận'), ('Bình Thuận', 'Bình Thuận'), ('Kon Tum', 'Kon Tum'), ('Gia Lai', 'Gia Lai'), ('Đắk Lắk', 'Đắk Lắk'), ('Đắk Nông', 'Đắk Nông'), ('Đà Lạt', 'Đà Lạt'), ('Bình Phước', 'Bình Phước'), ('Tây Ninh', 'Tây Ninh'), ('Bình Dương', 'Bình Dương'), ('Đồng Nai', 'Đồng Nai'), ('Bà Rịa - Vũng Tàu', 'Bà Rịa - Vũng Tàu'), ('Thành phố Hồ Chí Minh', 'Thành phố Hồ Chí Minh'), ('Long An', 'Long An'), ('Tiền Giang', 'Tiền Giang'), ('Bến Tre', 'Bến Tre'), ('Trà Vinh', 'Trà Vinh'), ('Vĩnh Long', 'Vĩnh Long'), ('Đồng Tháp', 'Đồng Tháp'), ('An Giang', 'An Giang'), ('Kiên Giang', 'Kiên Giang'), ('Cần Thơ', 'Cần Thơ'), ('Hậu Giang', 'Hậu Giang'), ('Sóc Trăng', 'Sóc Trăng'), ('Bạc Liêu', 'Bạc Liêu'), ('Cà Mau', 'Cà Mau')], max_length=50)),
                ('endPoint', models.CharField(choices=[('Hà Nội', 'Hà Nội'), ('Hà Giang', 'Hà Giang'), ('Cao Bằng', 'Cao Bằng'), ('Bắc Kạn', 'Bắc Kạn'), ('Tuyên Quang', 'Tuyên Quang'), ('Lào Cai', 'Lào Cai'), ('Điện Biên', 'Điện Biên'), ('Lai Châu', 'Lai Châu'), ('Sơn La', 'Sơn La'), ('Yên Bái', 'Yên Bái'), ('Hoà Bình', 'Hoà Bình'), ('Thái Nguyên', 'Thái Nguyên'), ('Lạng Sơn', 'Lạng Sơn'), ('Quảng Ninh', 'Quảng Ninh'), ('Bắc Giang', 'Bắc Giang'), ('Phú Thọ', 'Phú Thọ'), ('Vĩnh Phúc', 'Vĩnh Phúc'), ('Bắc Ninh', 'Bắc Ninh'), ('Hải Dương', 'Hải Dương'), ('Hải Phòng', 'Hải Phòng'), ('Hưng Yên', 'Hưng Yên'), ('Thái Bình', 'Thái Bình'), ('Hà Nam', 'Hà Nam'), ('Nam Định', 'Nam Định'), ('Ninh Bình', 'Ninh Bình'), ('Thanh Hóa', 'Thanh Hóa'), ('Nghệ An', 'Nghệ An'), ('Hà Tĩnh', 'Hà Tĩnh'), ('Quảng Bình', 'Quảng Bình'), ('Quảng Trị', 'Quảng Trị'), ('Thừa Thiên Huế', 'Thừa Thiên Huế'), ('Đà Nẵng', 'Đà Nẵng'), ('Quảng Nam', 'Quảng Nam'), ('Quảng Ngãi', 'Quảng Ngãi'), ('Bình Định', 'Bình Định'), ('Phú Yên', 'Phú Yên'), ('Khánh Hòa', 'Khánh Hòa'), ('Ninh Thuận', 'Ninh Thuận'), ('Bình Thuận', 'Bình Thuận'), ('Kon Tum', 'Kon Tum'), ('Gia Lai', 'Gia Lai'), ('Đắk Lắk', 'Đắk Lắk'), ('Đắk Nông', 'Đắk Nông'), ('Đà Lạt', 'Đà Lạt'), ('Bình Phước', 'Bình Phước'), ('Tây Ninh', 'Tây Ninh'), ('Bình Dương', 'Bình Dương'), ('Đồng Nai', 'Đồng Nai'), ('Bà Rịa - Vũng Tàu', 'Bà Rịa - Vũng Tàu'), ('Thành phố Hồ Chí Minh', 'Thành phố Hồ Chí Minh'), ('Long An', 'Long An'), ('Tiền Giang', 'Tiền Giang'), ('Bến Tre', 'Bến Tre'), ('Trà Vinh', 'Trà Vinh'), ('Vĩnh Long', 'Vĩnh Long'), ('Đồng Tháp', 'Đồng Tháp'), ('An Giang', 'An Giang'), ('Kiên Giang', 'Kiên Giang'), ('Cần Thơ', 'Cần Thơ'), ('Hậu Giang', 'Hậu Giang'), ('Sóc Trăng', 'Sóc Trăng'), ('Bạc Liêu', 'Bạc Liêu'), ('Cà Mau', 'Cà Mau')], max_length=50)),
            ],
            options={
                'ordering': ['id'],
                'unique_together': {('startPoint', 'endPoint')},
            },
        ),
        migrations.CreateModel(
            name='SeatNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.IntegerField()),
                ('idBus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seatNumber', to='app.bus')),
            ],
            options={
                'ordering': ['id'],
                'unique_together': {('seat_number', 'idBus')},
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('price', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(200)])),
                ('distance', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3000)])),
                ('departure_Station', models.CharField(max_length=100)),
                ('ending_Station', models.CharField(max_length=100)),
                ('departure_Time', models.DateTimeField(default=django.utils.timezone.now)),
                ('arrival_Time', models.DateTimeField(default=django.utils.timezone.now)),
                ('hours', models.CharField(blank=True, max_length=20, null=True)),
                ('total_Seats', models.IntegerField(default=34)),
                ('reserved_Seats', models.IntegerField(default=0)),
                ('id_Buses', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trip', to='app.bus')),
                ('id_Route', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trip', to='app.route')),
            ],
            options={
                'ordering': ['id'],
                'unique_together': {('id', 'id_Buses')},
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('img', models.ImageField(blank=True, default=None, null=True, upload_to='ticket/%Y/%m')),
                ('status', models.BooleanField(default=False)),
                ('idSeatNumber', models.ForeignKey(limit_choices_to={'seat_number__isnull': True}, on_delete=django.db.models.deletion.CASCADE, related_name='Tickets', to='app.seatnumber')),
                ('idTrip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Tickets', to='app.trip')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='bus',
            name='idType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Buss', to='app.type'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_Customer', models.CharField(max_length=100)),
                ('phone_Customer', models.CharField(blank=True, max_length=10, null=True, validators=[app.models.validate_phone_number])),
                ('bookingDate', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('idTicket', models.ForeignKey(blank=True, limit_choices_to={'booking__isnull': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ticket')),
                ('idCustomer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Booking', to='app.customer')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='bus',
            name='id_Driver',
            field=models.ForeignKey(limit_choices_to={'bus__isnull': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.driver'),
        ),
    ]
